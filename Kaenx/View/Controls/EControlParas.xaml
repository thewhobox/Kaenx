<UserControl
    x:Class="Kaenx.Views.Easy.Controls.EControlParas"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Kaenx.View.Controls"
    xmlns:dyn="using:Kaenx.Classes.Dynamic"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:selectors="using:Kaenx.Classes.TemplateSelectors"
    xmlns:converter="using:Kaenx.Classes.Converter"
    xmlns:conv="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:ext="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:types="using:Kaenx.Classes.Dynamic"
    mc:Ignorable="d"
    x:Name="ParaControl"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>
        <conv:BoolToObjectConverter x:Key="ConvertBoolToBrush" TrueValue="Red" FalseValue="Blue" />
        <conv:BoolToObjectConverter x:Key="ConvertBoolToIcon" TrueValue="&#xE998;" FalseValue="&#xE946;" />
        <conv:StringVisibilityConverter x:Key="ConvertStringVisible" />
        <converter:ValueCheckBoxConverter x:Key="ConvertCheckBox" />
        <SolidColorBrush x:Key="SystemControlHighlightListAccentLowBrush" Color="{Binding Source={ThemeResource BrushAccentColor2}, Path=Color}" />
        
        <DataTemplate x:Key="ChannelTemplate">
            <toolkit:Expander Header="{Binding DisplayText}" BorderBrush="{ThemeResource BrushAccentColor2}" BorderThickness="0 1" Visibility="{Binding Visible}" HorizontalContentAlignment="Stretch">
                <ListView ItemsSource="{Binding Blocks}" SelectedItem="{Binding SelectedParaBlock, ElementName=ParaControl, Mode=TwoWay}" SelectedValue="{Binding SelectedParaBlockId, ElementName=ParaControl, Mode=TwoWay}" SelectedValuePath="Id" HorizontalAlignment="Stretch" >
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="MinHeight" Value="0" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="dyn:ParameterBlock">
                            <Border Height="40" Visibility="{Binding Visible}" >
                                <TextBlock Text="{Binding DisplayText}" VerticalAlignment="Center" Margin="40 0 10 0" />
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </toolkit:Expander>
        </DataTemplate>
        <DataTemplate x:Key="IndependentTemplate">
            <ListView ItemsSource="{Binding Blocks}" SelectedItem="{Binding SelectedParaBlock, ElementName=ParaControl, Mode=TwoWay}" SelectedValue="{Binding SelectedParaBlockId, ElementName=ParaControl, Mode=TwoWay}" SelectedValuePath="Id" >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="MinHeight" Value="0" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="dyn:ParameterBlock">
                        <Border Height="40" Visibility="{Binding Visible}" >
                            <TextBlock Text="{Binding DisplayText}" VerticalAlignment="Center" Margin="40 0 10 0" />
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </DataTemplate>
        <DataTemplate x:Key="TypeNotFound">
            <TextBlock>
                <Run Text="Type nicht gefunden..." />
                <LineBreak />
                <Run Text="{Binding Id}" />
            </TextBlock>
        </DataTemplate>

        <DataTemplate x:Key="TypeNumber">
            <Grid Visibility="{Binding Visible}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" />

                <local:NumberBox Grid.Column="1" IsEnabled="{Binding IsEnabled}" Value="{Binding Value}" ValueOk="{Binding Value, Mode=TwoWay}" Minimum="{Binding Minimum}" Maximum="{Binding Maximum}" />
                <TextBlock Grid.Column="2" Text="{Binding SuffixText}" Margin="10 0" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TypeText">
            <Grid Visibility="{Binding Visible}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="WrapWholeWords" />
                <TextBox Grid.Column="1" IsEnabled="{Binding IsEnabled}" MaxLength="{Binding MaxLength}" Text="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center" />
                <TextBlock Grid.Column="2" Text="{Binding SuffixText}" Margin="10 0" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TypeTextRead">
            <Grid Visibility="{Binding Visible}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="WrapWholeWords" />
                <TextBlock Grid.Column="1" Text="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center" />
                <TextBlock Grid.Column="2" Text="{Binding SuffixText}" Margin="10 0" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TypeEnums">
            <Grid Visibility="{Binding Visible}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="WrapWholeWords" />
                <ComboBox Grid.Column="1" IsEnabled="{Binding IsEnabled}" ItemsSource="{Binding Options}" DisplayMemberPath="Text" SelectedValuePath="Value" SelectedValue="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                <TextBlock Grid.Column="2" Text="{Binding SuffixText}" Margin="10 0" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TypeEnumsTwo" x:DataType="types:ParamEnumTwo">
            <Grid Visibility="{Binding Visible}" Margin="0 5" x:Name="test">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="WrapWholeWords" />

                <StackPanel Grid.Column="1">
                    <RadioButton IsEnabled="{Binding IsEnabled}" IsChecked="{Binding Selected1, Mode=TwoWay}" Tag="{Binding Option1.Value}"  Content="{Binding Option1.Text}" GroupName="{Binding Id}" />
                    <RadioButton IsEnabled="{Binding IsEnabled}" IsChecked="{Binding Selected2, Mode=TwoWay}" Content="{Binding Option2.Text}" GroupName="{Binding Id}" />
                </StackPanel>
                <TextBlock Grid.Column="2" Text="{Binding SuffixText}" Margin="10 0" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TypeCheckBox">
            <Grid Visibility="{Binding Visible}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="WrapWholeWords" />

                <CheckBox Grid.Column="1" IsEnabled="{Binding IsEnabled}" IsChecked="{Binding Value, Mode=TwoWay, Converter={StaticResource ConvertCheckBox}}" />
                <TextBlock Grid.Column="2" Text="{Binding SuffixText}" Margin="10 0" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TypeSeperator">
            <Grid Visibility="{Binding Visible}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Border Grid.ColumnSpan="4" BorderBrush="{ThemeResource BrushAccentColor2}" BorderThickness="0 1 0 0" Visibility="{Binding IsLineVisible}" />
                <TextBlock Grid.ColumnSpan="2" Text="{Binding Text}" Foreground="{ThemeResource BrushAccentColorDark1}" Visibility="{Binding Text, Converter={StaticResource ConvertStringVisible}}" Margin="10 0" VerticalAlignment="Center" TextWrapping="WrapWholeWords" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TypeSeperatorBox">
            <Border Visibility="{Binding Visible}" Margin="0 5" Padding="10" BorderThickness="1" BorderBrush="{Binding IsError, Converter={StaticResource ConvertBoolToBrush}}">
                <Border.Background>
                    <SolidColorBrush Color="{Binding IsError, Converter={StaticResource ConvertBoolToBrush}}" Opacity="0.2" />
                </Border.Background>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding IsError, Converter={StaticResource ConvertBoolToIcon}}" />
                    <TextBlock Grid.Column="1" Text="{Binding Text}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="WrapWholeWords" />
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="TypeColor">
            <Grid Visibility="{Binding Visible}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="550" Width="9*" />
                    <ColumnDefinition MinWidth="230" MaxWidth="350" Width="3*" />
                    <ColumnDefinition MaxWidth="120" Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" />

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="InCol" Text="{Binding Value, Mode=TwoWay}" MaxLength="6" CornerRadius="2 0 0 2" />
                    <Border Grid.Column="1" BorderBrush="{ThemeResource TextBoxBorderThemeBrush}" BorderThickness="0 1">
                        <Border.Background>
                            <SolidColorBrush Color="{Binding Color}" />
                        </Border.Background>
                    </Border>
                    <Button Grid.Column="2" Content="Picker" CornerRadius="0 2 2 0"  BorderBrush="{ThemeResource TextBoxBorderThemeBrush}" BorderThickness="0 1 1 1">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="ColorPickerFlyout" Color="{Binding Color, Mode=TwoWay}" IsMoreButtonVisible="True"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Grid>
            </Grid>
        </DataTemplate>
        
        <selectors:BlockSelector x:Key="BlockSelector" Channel="{StaticResource ChannelTemplate}" Independent="{StaticResource IndependentTemplate}" />
        <selectors:ControlsParamTypesSelector x:Key="ParaTypeSelector" 
                                              NotFound="{StaticResource TypeNotFound}" 
                                              Number="{StaticResource TypeNumber}"
                                              Text="{StaticResource TypeText}"
                                              TextRead="{StaticResource TypeTextRead}"
                                              Enums="{StaticResource TypeEnums}"
                                              EnumsTwo="{StaticResource TypeEnumsTwo}"
                                              CheckBox="{StaticResource TypeCheckBox}"
                                              Seperator="{StaticResource TypeSeperator}"
                                              SeperatorBox="{StaticResource TypeSeperatorBox}"
                                              Color="{StaticResource TypeColor}" />
    </UserControl.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding ElementName=ShowComsToggler, Path=IsOn}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ColsPara.Width" Value="0" />
                        <Setter Target="ColsComs.Width" Value="*" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="ColsPara"  />
            <ColumnDefinition x:Name="ColsComs" Width="0" />
        </Grid.ColumnDefinitions>

        <ToggleSwitch x:Name="ShowComsToggler" Grid.ColumnSpan="2" HorizontalAlignment="Center" OnContent="Ansicht Kommunikationsobjekte" OffContent="Ansicht Kommunikationsobjekte"  />

        <Grid Grid.Row="1" BorderBrush="{ThemeResource BrushAccentColorDark2}" BorderThickness="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" MaxWidth="250" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <ListView ItemsSource="{Binding Channels}" ItemTemplateSelector="{StaticResource BlockSelector}" SelectionMode="None"
                BorderBrush="{ThemeResource BrushAccentColorDark2}" BorderThickness="0 0 1 0">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="MinHeight" Value="0" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <ListView Grid.Column="1" ItemTemplateSelector="{StaticResource ParaTypeSelector}" ItemsSource="{Binding SelectedParaBlock.Parameters, ElementName=ParaControl}" SelectionMode="None">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="MinHeight" Value="0" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>

        <toolkit:DataGrid x:Name="ComList" Grid.Row="1"  Grid.Column="1" BorderBrush="LightGray" BorderThickness="1 1 1 0" Margin="5 0 0 0" AutoGenerateColumns="False"
                          ItemsSource="{Binding device.ComObjects, Mode=OneWay}" IsReadOnly="True" Background="{ThemeResource BrushAccentControlBackground}" CornerRadius="2 2 0 0">
            <toolkit:DataGrid.Columns>
                <toolkit:DataGridTextColumn x:Uid="/Groups/LComsNumb" Tag="Number" Width="SizeToCells" Binding="{Binding Number}" />
                <toolkit:DataGridTextColumn x:Uid="/Groups/LComsName" Tag="Name" Width="SizeToCells" Binding="{Binding DisplayName}" />
                <toolkit:DataGridTextColumn x:Uid="/Groups/LComsFunc" Tag="Function" Width="SizeToCells" Binding="{Binding Function}" />
                <toolkit:DataGridTextColumn x:Uid="/Groups/LComsConn" Tag="Connections" Width="SizeToCells" Binding="{Binding Connections}" />
            </toolkit:DataGrid.Columns>
        </toolkit:DataGrid>


        <Border x:Name="LoadRing" Grid.RowSpan="3" Grid.ColumnSpan="2" Background="LightGray" Opacity="0.6">
            <ProgressRing HorizontalAlignment="Center" IsActive="true" Width="100" Height="100"  Visibility="Visible"/>
        </Border>

    </Grid>
</UserControl>
